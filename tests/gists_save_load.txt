use gists to store data and generate URLs for Save/Restore:

Example of a get for a specific GIST:
https://api.github.com/gists/2d46850bc3d18403186d6f81bc3c9eee
--> Use the RAWURL to download the content of the file

Example of a create a GIST (anonymously/public):
https://developer.github.com/v3/gists/#create-a-gist

content might just be JSON (easier to consume in JS)


//TODO: Implement SAVE (save all base64 content of images/videos/sounds + level + labels of images (if exist))
User-Agent: VirtualDialScan
Content-Type: application/json

URL: https://api.github.com/gists

{
  "description": "the description for this gist",
  "public": true,
  "files": {
    "file1.txt": {
      "content": "String file contents"
    }
  }
}

{
"url": "https://api.github.com/gists/f56c20b79071cf9c2ba7713f9ae735d4",
"forks_url": "https://api.github.com/gists/f56c20b79071cf9c2ba7713f9ae735d4/forks",
"commits_url": "https://api.github.com/gists/f56c20b79071cf9c2ba7713f9ae735d4/commits",
"id": "f56c20b79071cf9c2ba7713f9ae735d4",
"git_pull_url": "https://gist.github.com/f56c20b79071cf9c2ba7713f9ae735d4.git",
"git_push_url": "https://gist.github.com/f56c20b79071cf9c2ba7713f9ae735d4.git",
"html_url": "https://gist.github.com/f56c20b79071cf9c2ba7713f9ae735d4",
"files": {
"file1.txt": {
"filename": "file1.txt",
"type": "text/plain",
"language": "Text",
"raw_url": "https://gist.githubusercontent.com/anonymous/f56c20b79071cf9c2ba7713f9ae735d4/raw/b087a4c57f47ffad4025004869d7366ddc82d0d1/file1.txt",
"size": 20,
"truncated": false,
"content": "String file contents"
}
},
"public": true,
"created_at": "2016-12-13T21:36:26Z",
"updated_at": "2016-12-13T21:36:26Z",
"description": "the description for this gist",
"comments": 0,
"user": null,
"comments_url": "https://api.github.com/gists/f56c20b79071cf9c2ba7713f9ae735d4/comments",
"forks": [],
"history": [
  {
"user": {
"login": "invalid-email-address",
"id": 148100,
"avatar_url": "https://avatars.githubusercontent.com/u/148100?v=3",
"gravatar_id": "",
"url": "https://api.github.com/users/invalid-email-address",
"html_url": "https://github.com/invalid-email-address",
"followers_url": "https://api.github.com/users/invalid-email-address/followers",
"following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}",
"gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}",
"starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}",
"subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions",
"organizations_url": "https://api.github.com/users/invalid-email-address/orgs",
"repos_url": "https://api.github.com/users/invalid-email-address/repos",
"events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}",
"received_events_url": "https://api.github.com/users/invalid-email-address/received_events",
"type": "User",
"site_admin": false
},
"version": "181e4f622c0c9b93c2f1907371ed6078548aee27",
"committed_at": "2016-12-13T21:36:26Z",
"change_status": {
"total": 1,
"additions": 1,
"deletions": 0
},
"url": "https://api.github.com/gists/f56c20b79071cf9c2ba7713f9ae735d4/181e4f622c0c9b93c2f1907371ed6078548aee27"
}
],
"truncated": false
}

//TODO: Implement GET by using the Gist ID and the RAWURL to fetch that saved data



//TODO: Have a list of all saves GISTS (in a specific GIST) that can be used to store all available previously saved GISTS
